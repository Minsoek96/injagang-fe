import { Suspense, useEffect } from 'react';

import styled from 'styled-components';

import { ResizableSplitPanel } from '@/src/widgets/resize-panel';

import { CoverLetterListViewer } from '@/src/features/coverletter/preview';
import { CoverLetterDetailLayout } from '@/src/features/coverletter/detail';

import { useCoverLetterStore } from '@/src/entities/coverLetter';
import { useAuthStore } from '@/src/entities/auth';

import { Container, ErrorBoundary, Spinner } from '@/src/shared/ui';

import { Header, CoverLetterErrorFallback } from './ui';

function CoverLetterPage() {
  const role = useAuthStore((state) => state.role);
  const initCoverLetter = useCoverLetterStore((state) => state.initCoverLetter);

  const headerTitle = 'ÎÇòÏùò ÏûêÏÜåÏÑ§';

  useEffect(
    () => () => {
      initCoverLetter();
    },
    [],
  );

  return (
    <CoverLetterStyle>
      {role && (
        <>
          <Header title={headerTitle} />
          <ResizableSplitPanel>
            <CoverLetterContainer>
              <ResizableSplitPanel.LeftPanel>
                <ErrorBoundary
                  renderFallback={(error, onReset) => (
                    <CoverLetterErrorFallback
                      onReset={onReset}
                      message={{
                        title: 'Ïïó! ÏûêÏÜåÏÑ§ Ï°∞ÌöåÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.üòÖ',
                        subTitle:
                          'ÏùºÏãúÏ†ÅÏù∏ Ïò§Î•òÏùº Ïàò ÏûàÏúºÎãà Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî',
                      }}
                    />
                  )}
                >
                  <Suspense
                    fallback={
                      <Spinner message="ÎãπÏã†Ïùò ÏûêÏÜåÏÑ§ÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ï§ë ÏûÖÎãàÎã§." />
                    }
                  >
                    {/* Î©îÏù∏ Ïª¥Ìè¨ÎÑåÌä∏ */}
                    <CoverLetterListViewer />
                  </Suspense>
                </ErrorBoundary>
              </ResizableSplitPanel.LeftPanel>

              <ResizableSplitPanel.Center />

              <ResizableSplitPanel.RightPanel>
                <ErrorBoundary
                  renderFallback={(error, onReset) => (
                    <CoverLetterErrorFallback
                      onReset={onReset}
                      message={{
                        title: 'Ïïó! ÎãπÏã†Ïùò Ïù∏ÏÉùÏùò ÌéòÏù¥ÏßÄ Ï°∞ÌöåÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.üòÖ',
                        subTitle:
                          'ÏùºÏãúÏ†ÅÏù∏ Ïò§Î•òÏùº Ïàò ÏûàÏúºÎãà Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî',
                      }}
                    />
                  )}
                >
                  <Suspense
                    fallback={
                      <Spinner message="ÎãπÏã†Ïùò ÌéòÏù¥ÏßÄÎ•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë ÏûÖÎãàÎã§." />
                    }
                  >
                    {/* Î©îÏù∏ Ïª¥Ìè¨ÎÑåÌä∏ */}
                    <CoverLetterDetailLayout />
                  </Suspense>
                </ErrorBoundary>
              </ResizableSplitPanel.RightPanel>
            </CoverLetterContainer>
          </ResizableSplitPanel>
        </>
      )}
    </CoverLetterStyle>
  );
}

export default CoverLetterPage;

const CoverLetterStyle = styled.div`
  width: 100%;
`;

const CoverLetterContainer = styled(Container.ItemBase)`
  display: flex;
  width: 100%;
  color: ${(props) => props.theme.colors.text};
  height: 65rem;
`;
